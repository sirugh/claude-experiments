name: PR Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'simple-type/**'
      - 'housing-market-data/**'
      - '.github/workflows/pr-preview.yml'

permissions:
  contents: write
  pull-requests: write

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed app
        id: detect
        run: |
          # Get the list of changed files
          if [ "${{ github.event.pull_request.base.sha }}" != "" ]; then
            CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
          else
            CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
          fi

          echo "Changed files:"
          echo "$CHANGED_FILES"

          # Detect which app changed
          APP_NAME=""
          APP_DIR=""

          if echo "$CHANGED_FILES" | grep -q "^simple-type/"; then
            APP_NAME="simple-type"
            APP_DIR="simple-type"
          elif echo "$CHANGED_FILES" | grep -q "^housing-market-data/"; then
            APP_NAME="housing-market-data"
            APP_DIR="housing-market-data"
          fi

          if [ -z "$APP_NAME" ]; then
            echo "No app changes detected, only workflow changes"
            echo "app_name=" >> $GITHUB_OUTPUT
            echo "app_dir=" >> $GITHUB_OUTPUT
            echo "should_build=false" >> $GITHUB_OUTPUT
          else
            echo "Detected app: $APP_NAME"
            echo "app_name=$APP_NAME" >> $GITHUB_OUTPUT
            echo "app_dir=$APP_DIR" >> $GITHUB_OUTPUT
            echo "should_build=true" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node
        if: steps.detect.outputs.should_build == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        if: steps.detect.outputs.should_build == 'true'
        run: npm ci --legacy-peer-deps
        working-directory: ./${{ steps.detect.outputs.app_dir }}

      - name: Build with PR base path
        if: steps.detect.outputs.should_build == 'true'
        run: npm run build
        working-directory: ./${{ steps.detect.outputs.app_dir }}
        env:
          VITE_BASE_PATH: /claude-experiments/_pr/${{ github.event.pull_request.number }}/

      - name: Checkout or create gh-pages branch
        if: steps.detect.outputs.should_build == 'true'
        run: |
          # Configure git identity first
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Try to checkout gh-pages, create if it doesn't exist
          git fetch origin gh-pages:gh-pages 2>/dev/null || {
            echo "gh-pages branch doesn't exist, creating it..."
            git checkout --orphan gh-pages
            git rm -rf .
            # Add root index.html to enable GitHub Pages
            echo '<!DOCTYPE html><html><head><title>Claude Experiments</title></head><body><h1>Claude Experiments</h1><p>PR previews are available at /_pr/&lt;number&gt;/</p></body></html>' > index.html
            git add index.html
            git commit -m "Initialize gh-pages branch"
            git push origin gh-pages
          }

          # Checkout gh-pages in a separate directory
          git clone --branch gh-pages --single-branch https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git gh-pages

      - name: Deploy to PR preview directory
        if: steps.detect.outputs.should_build == 'true'
        run: |
          # Create PR preview directory
          mkdir -p gh-pages/_pr/${{ github.event.pull_request.number }}

          # Remove old content if it exists
          rm -rf gh-pages/_pr/${{ github.event.pull_request.number }}/*

          # Copy built files
          cp -r ${{ steps.detect.outputs.app_dir }}/dist/* gh-pages/_pr/${{ github.event.pull_request.number }}/

          # Ensure .nojekyll exists to disable Jekyll processing
          cd gh-pages
          if [ ! -f .nojekyll ]; then
            touch .nojekyll
            git add .nojekyll
          fi

          # Commit and push
          git add _pr/${{ github.event.pull_request.number }}
          git commit -m "Deploy PR #${{ github.event.pull_request.number }} preview (${{ steps.detect.outputs.app_name }})" || echo "No changes to commit"
          git push origin gh-pages

      - name: Comment PR with preview URL
        if: steps.detect.outputs.should_build == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const appName = '${{ steps.detect.outputs.app_name }}';
            const previewUrl = `https://${{ github.repository_owner }}.github.io/claude-experiments/_pr/${prNumber}/`;

            const comment = `## 🔍 PR Preview Deployed

            **${appName}** preview is ready at:
            ${previewUrl}

            This preview will be automatically removed when the PR is closed or merged.`;

            // Find existing preview comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('PR Preview Deployed')
            );

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: comment
              });
            }

      - name: Comment when no build needed
        if: steps.detect.outputs.should_build == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;

            const comment = `## ℹ️ No Preview Needed

            This PR only contains workflow changes and doesn't modify any apps.
            No preview deployment was created.`;

            // Find existing preview comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              (comment.body.includes('PR Preview Deployed') || comment.body.includes('No Preview Needed'))
            );

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: comment
              });
            }
