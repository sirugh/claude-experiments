name: PR Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'simple-type/**'
      - 'chess-teacher/**'
      - '.github/workflows/pr-preview.yml'

permissions:
  contents: write
  pull-requests: write

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install and build simple-type
        run: |
          npm ci
          npm run build
        working-directory: ./simple-type
        env:
          VITE_BASE_PATH: /claude-experiments/_pr/${{ github.event.pull_request.number }}/simple-type/

      - name: Install and build chess-teacher
        run: |
          npm ci
          npm run build
        working-directory: ./chess-teacher
        env:
          VITE_BASE_PATH: /claude-experiments/_pr/${{ github.event.pull_request.number }}/chess-teacher/

      - name: Checkout or create gh-pages branch
        run: |
          # Configure git identity first
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Try to checkout gh-pages, create if it doesn't exist
          git fetch origin gh-pages:gh-pages 2>/dev/null || {
            echo "gh-pages branch doesn't exist, creating it..."
            git checkout --orphan gh-pages
            git rm -rf .
            # Add root index.html to enable GitHub Pages
            echo '<!DOCTYPE html><html><head><title>Claude Experiments</title></head><body><h1>Claude Experiments</h1><p>PR previews are available at /_pr/&lt;number&gt;/</p></body></html>' > index.html
            git add index.html
            git commit -m "Initialize gh-pages branch"
            git push origin gh-pages
          }

          # Checkout gh-pages in a separate directory
          git clone --branch gh-pages --single-branch https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git gh-pages

      - name: Deploy to PR preview directory
        run: |
          # Create PR preview directories
          mkdir -p gh-pages/_pr/${{ github.event.pull_request.number }}/simple-type
          mkdir -p gh-pages/_pr/${{ github.event.pull_request.number }}/chess-teacher

          # Copy built files
          cp -r simple-type/dist/* gh-pages/_pr/${{ github.event.pull_request.number }}/simple-type/
          cp -r chess-teacher/dist/* gh-pages/_pr/${{ github.event.pull_request.number }}/chess-teacher/

          # Ensure .nojekyll exists to disable Jekyll processing
          cd gh-pages
          if [ ! -f .nojekyll ]; then
            touch .nojekyll
            git add .nojekyll
          fi

          # Commit and push
          git add _pr/${{ github.event.pull_request.number }}
          git commit -m "Deploy PR #${{ github.event.pull_request.number }} preview" || echo "No changes to commit"
          git push origin gh-pages

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const baseUrl = `https://${{ github.repository_owner }}.github.io/claude-experiments/_pr/${prNumber}`;
            const simpleTypeUrl = `${baseUrl}/simple-type/`;
            const chessTeacherUrl = `${baseUrl}/chess-teacher/`;

            const comment = `## 🔍 PR Preview Deployed

            Your previews are ready:

            - **Simple Type**: ${simpleTypeUrl}
            - **Chess Teacher**: ${chessTeacherUrl}

            These previews will be automatically removed when the PR is closed or merged.`;

            // Find existing preview comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('PR Preview Deployed')
            );

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: comment
              });
            }
